{
  "enabled": true,
  "name": "Code Quality Analyzer",
  "description": "Monitors source code files for changes and analyzes modified code for potential improvements including code smells, design patterns, best practices, readability, maintainability, and performance optimizations. Leverages Context7, SequentialThinking, ByteRover, and Serena for comprehensive analysis to ensure production-ready builds.",
  "version": "1",
  "when": {
    "type": "userTriggered",
    "patterns": [
      "src/**/*.ts",
      "src/**/*.tsx",
      "src/**/*.js",
      "src/**/*.jsx",
      "*.ts",
      "*.tsx",
      "*.js",
      "*.jsx",
      "package.json",
      "tsconfig.json",
      "next.config.ts",
      "tailwind.config.ts"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Analyze the modified code files for potential improvements. Focus on:\n\n1. **Code Quality Analysis**: Identify code smells, anti-patterns, and violations of best practices\n2. **Design Patterns**: Suggest appropriate design patterns and architectural improvements\n3. **Performance Optimization**: Identify performance bottlenecks and suggest optimizations\n4. **Readability & Maintainability**: Recommend improvements for code clarity and long-term maintenance\n5. **Production Readiness**: Ensure code meets production standards including error handling, type safety, and security\n\nUse the following approach:\n- Apply **SequentialThinking** for systematic analysis of complex code changes\n- Leverage **Context7** for accessing latest documentation and best practices for the tech stack\n- Use **ByteRover** to analyze implementation processes and memory optimization\n- Apply **Serena** for comprehensive codebase analysis and pattern recognition\n- Focus on debugging and solving any potential issues based on the newest documentation\n\nProvide specific, actionable suggestions while maintaining existing functionality. Prioritize changes that improve code quality without breaking existing features."
  }
}