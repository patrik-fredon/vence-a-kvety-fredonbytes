{
  "enabled": true,
  "name": "Documentation Sync on Code Changes",
  "description": "Automatically analyzes source code changes in TypeScript/Next.js files and updates all project documentation including README.md, /docs folder, and GitHub repository documentation files to ensure they accurately reflect the current codebase state, API changes, new features, and architectural modifications.",
  "version": "1",
  "when": {
    "type": "userTriggered",
    "patterns": [
      "src/**/*.ts",
      "src/**/*.tsx",
      "src/**/*.js",
      "src/**/*.jsx",
      "next.config.ts",
      "tailwind.config.ts",
      "tsconfig.json",
      "package.json"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Source code files have been modified in this TypeScript/Next.js project. Please analyze the changes and update the project documentation accordingly. Focus on:\n\n1. **README.md Updates**: Review and update with any new features, API changes, setup instructions, or architectural modifications\n2. **Technical Documentation** (/docs folder): Update technical details, architecture diagrams, API documentation, and implementation guides\n3. **GitHub Repository Files**: Refresh as needed:\n   - CODE_OF_CONDUCT.md (if behavioral guidelines changed)\n   - LICENSE (if licensing changed)\n   - CONTRIBUTING.md (if development workflow changed)\n   - Any other .md files in the root directory\n\n**Documentation Quality Standards**:\n- Ensure accuracy and reflection of current codebase state\n- Provide detailed explanations for user understanding\n- Keep content fresh and up-to-date\n- Maintain consistency with project's internationalization (Czech/English support)\n- Align with Next.js 15 + TypeScript + Supabase architecture\n- Professionally document all mandatory code sections, functions, and elements for maintainable and clean development\n\n**Special Attention Areas**:\n- API endpoint changes and new routes\n- New React components and their props/usage\n- Configuration file updates (next.config.ts, tailwind.config.ts, etc.)\n- Architectural modifications and design pattern changes\n- Database schema changes or Supabase updates\n- New dependencies or package changes\n- Authentication and authorization changes\n- Caching strategy modifications\n- Performance optimization implementations\n\nAnalyze the modified files, identify documentation gaps, and update all relevant documentation files to maintain professional, accurate, and comprehensive project documentation."
  }
}